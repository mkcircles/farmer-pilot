name: 'FPO management'
description: |-

  APIs for managing FPOs
endpoints:
  -
    httpMethods:
      - GET
    uri: api/fpos
    metadata:
      groupName: 'FPO management'
      groupDescription: |-

        APIs for managing FPOs
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all FPOs.'
      description: 'This endpoint allows you to fetch all FPOs.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "current_page": 1,
          "data": [
          {
          "id": 1,
          "fpo_name": "FPO 1",
          "district": "FPO 1 district",
          "county": "FPO 1 county",
          "sub_county": "FPO 1 sub county",
          "parish": "FPO 1 parish",
          "village": "FPO 1 village",
          "main_crop": "FPO 1 main crop",
          "fpo_member_count": 1,
          "fpo_contact_name": "FPO 1 contact name",
          "contact_phone_number": "FPO 1 contact phone number",
          "Cert_of_Inc": "FPO 1 cert of inc",
          "address": "FPO 1 address",
          "created_at": "2021-06-30T11:30:00.000000Z",
          "updated_at": "2021-06-30T11:30:00.000000Z"
          },
          {
          "id": 2,
          "fpo_name": "FPO 2",
          "district": "FPO 2 district",
          "county": "FPO 2 county",
          "sub_county": "FPO 2 sub county",
          "parish": "FPO 2 parish",
          "village": "FPO 2 village",
          "main_crop": "FPO 2 main crop",
          "fpo_member_count": 2,
          "fpo_contact_name": "FPO 2 contact name",
          "contact_phone_number": "FPO 2 contact phone number",
          "Cert_of_Inc": "FPO 2 cert of inc",
          "address": "FPO 2 address",
          "created_at": "2021-06-30T11:30:00.000000Z",
          "updated_at": "2021-06-30T11:30:00.000000Z"
          }
          ],
          "first_page_url": "http://localhost:8000/api/fpos?page=1",
          "from": 1,
          "last_page": 1,
          "last_page_url": "http://localhost:8000/api/fpos?page=1",
          "links": [
          {
          "url": null,
          "label": "&laquo; Previous",
          "active": false
          },
          {
          "url": "http://localhost:8000/api/fpos?page=1",
          "label": "1",
          "active": true
          },
          {
          "url": null,
          "label": "Next &raquo;",
          "active": false
          }
          ],
          "next_page_url": null,
          "path": "http://localhost:8000/api/fpos",
          "per_page": 15,
          "prev_page_url": null,
          "to": 2,
          "total": 2
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
          "message": "This action is unauthorized."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
          "message": "No query results for FPOs."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/fpos/summary
    metadata:
      groupName: 'FPO management'
      groupDescription: |-

        APIs for managing FPOs
      subgroup: ''
      subgroupDescription: ''
      title: 'Get FPOs summary.'
      description: 'This endpoint allows you to fetch a summary of all FPOs.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "message": "FPOs retrieved successfully",
          "data": [
          {
          "id": 1,
          "fpo_name": "FPO 1"
          },
          {
          "id": 2,
          "fpo_name": "FPO 2"
          }
          ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
          "message": "This action is unauthorized."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
          "message": "No FPOs found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/fpo/register
    metadata:
      groupName: 'FPO management'
      groupDescription: |-

        APIs for managing FPOs
      subgroup: ''
      subgroupDescription: ''
      title: 'Create FPO.'
      description: 'This endpoint allows you to create a new FPO.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      fpo_name:
        name: fpo_name
        description: 'The name of the FPO.'
        required: true
        example: aut
        type: string
        custom: []
      district:
        name: district
        description: 'The district of the FPO.'
        required: true
        example: neque
        type: string
        custom: []
      county:
        name: county
        description: 'The county of the FPO.'
        required: true
        example: eaque
        type: string
        custom: []
      sub_county:
        name: sub_county
        description: 'The sub county of the FPO.'
        required: true
        example: consectetur
        type: string
        custom: []
      parish:
        name: parish
        description: 'The parish of the FPO.'
        required: true
        example: aliquam
        type: string
        custom: []
      village:
        name: village
        description: 'The village of the FPO.'
        required: true
        example: inventore
        type: string
        custom: []
      main_crop:
        name: main_crop
        description: 'The main crop of the FPO.'
        required: true
        example: provident
        type: string
        custom: []
      fpo_member_count:
        name: fpo_member_count
        description: 'The number of FPO members.'
        required: true
        example: 5
        type: integer
        custom: []
      fpo_contact_name:
        name: fpo_contact_name
        description: 'The contact name of the FPO.'
        required: true
        example: repellendus
        type: string
        custom: []
      contact_phone_number:
        name: contact_phone_number
        description: 'The contact phone number of the FPO.'
        required: true
        example: molestiae
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
      created_by:
        name: created_by
        description: 'The userId  of the FPO creator.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanBodyParameters:
      fpo_name: aut
      district: neque
      county: eaque
      sub_county: consectetur
      parish: aliquam
      village: inventore
      main_crop: provident
      fpo_member_count: 5
      fpo_contact_name: repellendus
      contact_phone_number: molestiae
      address: omnis
      created_by: 1
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "success": true,
          "message": "FPO created successfully",
          "data": {
          "fpo_name": "FPO 1",
          "district": "FPO 1 district",
          "county": "FPO 1 county",
          "sub_county": "FPO 1 sub county",
          "parish": "FPO 1 parish",
          "village": "FPO 1 village",
          "main_crop": "FPO 1 main crop",
          "fpo_member_count": 1,
          "fpo_contact_name": "FPO 1 contact name",
          "contact_phone_number": "FPO 1 contact phone number",
          "Cert_of_Inc": null,
          "created_by": 1,
          "updated_at": "2021-06-30T11:30:00.000000Z",
          "created_at": "2021-06-30T11:30:00.000000Z",
          "id": 1
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
          "success": false,
          "message": "Validation error",
          "data": {
          "fpo_name": [
          "The fpo name field is required."
          ],
          "district": [
          "The district field is required."
          ],
          "county": [
          "The county field is required."
          ],
          "sub_county": [
          "The sub county field is required."
          ],
          "parish": [
          "The parish field is required."
          ],
          "village": [
          "The village field is required."
          ],
          "main_crop": [
          "The main crop field is required."
          ],
          "fpo_member_count": [
          "The fpo member count field is required."
          ],
          "fpo_contact_name": [
          "The fpo contact name field is required."
          ],
          "contact_phone_number": [
          "The contact phone number field is required."
          ],
          "created_by": [
          "The created by field is required."
          ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Unauthenticated."
           }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
          "message": "This action is unauthorized."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
          "message": "No query results for FPOs."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/fpo/{id}'
    metadata:
      groupName: 'FPO management'
      groupDescription: |-

        APIs for managing FPOs
      subgroup: ''
      subgroupDescription: ''
      title: 'Get FPO by id.'
      description: 'This endpoint allows you to fetch a FPO by id.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the FPO.'
        required: true
        example: deleniti
        type: string
        custom: []
    cleanUrlParameters:
      id: deleniti
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "message": "FPO retrieved successfully",
          "data": {
          "id": 1,
          "fpo_name": "FPO 1",
          "district": "FPO 1 district",
          "county": "FPO 1 county",
          "sub_county": "FPO 1 sub county",
          "parish": "FPO 1 parish",
          "village": "FPO 1 village",
          "main_crop": "FPO 1 main crop",
          "fpo_member_count": 1,
          "fpo_contact_name": "FPO 1 contact name",
          "contact_phone_number": "FPO 1 contact phone number",
          "Cert_of_Inc": "FPO 1 cert of inc",
          "address": "FPO 1 address",
          "created_at": "2021-06-30T11:30:00.000000Z",
          "updated_at": "2021-06-30T11:30:00.000000Z"
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
          "message": "This action is unauthorized."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
          "message": "FPO not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/fpo/{id}/update'
    metadata:
      groupName: 'FPO management'
      groupDescription: |-

        APIs for managing FPOs
      subgroup: ''
      subgroupDescription: ''
      title: 'Update FPO by id.'
      description: 'This endpoint allows you to update a FPO by id.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the FPO.'
        required: true
        example: perspiciatis
        type: string
        custom: []
    cleanUrlParameters:
      id: perspiciatis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      fpo_name:
        name: fpo_name
        description: 'The name of the FPO.'
        required: true
        example: nobis
        type: string
        custom: []
      district:
        name: district
        description: 'The district of the FPO.'
        required: true
        example: id
        type: string
        custom: []
      county:
        name: county
        description: 'The county of the FPO.'
        required: true
        example: praesentium
        type: string
        custom: []
      sub_county:
        name: sub_county
        description: 'The sub county of the FPO.'
        required: true
        example: sit
        type: string
        custom: []
      parish:
        name: parish
        description: 'The parish of the FPO.'
        required: true
        example: aut
        type: string
        custom: []
      village:
        name: village
        description: 'The village of the FPO.'
        required: true
        example: totam
        type: string
        custom: []
      main_crop:
        name: main_crop
        description: 'The main crop of the FPO.'
        required: true
        example: enim
        type: string
        custom: []
      fpo_member_count:
        name: fpo_member_count
        description: 'The number of FPO members.'
        required: true
        example: 1
        type: integer
        custom: []
      fpo_contact_name:
        name: fpo_contact_name
        description: 'The contact name of the FPO.'
        required: true
        example: aspernatur
        type: string
        custom: []
      contact_phone_number:
        name: contact_phone_number
        description: 'The contact phone number of the FPO.'
        required: true
        example: quaerat
        type: string
        custom: []
      created_by:
        name: created_by
        description: 'The userId  of the FPO creator.'
        required: true
        example: 18
        type: integer
        custom: []
    cleanBodyParameters:
      fpo_name: nobis
      district: id
      county: praesentium
      sub_county: sit
      parish: aut
      village: totam
      main_crop: enim
      fpo_member_count: 1
      fpo_contact_name: aspernatur
      contact_phone_number: quaerat
      created_by: 18
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "message": "FPO updated successfully",
          "data": {
          "id": 1,
          "fpo_name": "FPO 1",
          "district": "FPO 1 district",
          "county": "FPO 1 county",
          "sub_county": "FPO 1 sub county",
          "parish": "FPO 1 parish",
          "village": "FPO 1 village",
          "main_crop": "FPO 1 main crop",
          "fpo_member_count": 1,
          "fpo_contact_name": "FPO 1 contact name",
          "contact_phone_number": "FPO 1 contact phone number",
          "Cert_of_Inc": "FPO 1 cert of inc",
          "address": "FPO 1 address",
          "created_at": "2021-06-30T11:30:00.000000Z",
          "updated_at": "2021-06-30T11:30:00.000000Z"
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
          "success": false,
          "message": "Validation error",
          "data": {
          "fpo_name": [
          "The fpo name field is required."
          ],
          "district": [
          "The district field is required."
          ],
          "county": [
          "The county field is required."
          ],
          "sub_county": [
          "The sub county field is required."
          ],
          "parish": [
          "The parish field is required."
          ],
          "village": [
          "The village field is required."
          ],
          "main_crop": [
          "The main crop field is required."
          ],
          "fpo_member_count": [
           "The fpo member count field is required."
          ],
          "fpo_contact_name": [
          "The fpo contact name field is required."
          ],
          "contact_phone_number": [
          "The contact phone number field is required."
          ],
          "created_by": [
          "The created by field is required."
          ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
          "message": "This action is unauthorized."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
          "message": "FPO not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
