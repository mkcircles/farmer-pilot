## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Auth Management'
description: |-

  APIs for managing authentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: 'Auth Management'
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Login user'
      description: 'This endpoint allows a user to login'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address or phone number of the user'
        required: true
        example: arogahn@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'The password of the user'
        required: true
        example: '&$Q=f&{YR:>(7'
        type: string
        custom: []
    cleanBodyParameters:
      email: arogahn@example.com
      password: '&$Q=f&{YR:>(7'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "message": "User login successfully.",
          "data": {
          "id": 1,
          "name": "John Doe",
          "email": "john@test.com",
          "email_verified_at": null,
          "phone_number": "256700000000",
          "created_at": "2021-06-27T14:56:04.000000Z",
          "updated_at": "2021-06-27T14:56:04.000000Z",
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "success": false,
          "message": "Unauthorised.",
          "data": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "success": false,
          "message": "Your account is inactive. Please contact the administrator..",
          "data": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
          "message": "The given data was invalid.",
          "errors": {
          "email": [
          "The email field is required."
          ],
          "password": [
          "The password field is required."
          ]
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
          "message": "Server Error."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: 'Auth Management'
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout user'
      description: 'This endpoint allows a user to logout'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "message": "User logged out successfully.",
          "data": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "success": false,
          "message": "Unauthorised.",
          "data": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/refresh
    metadata:
      groupName: 'Auth Management'
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Refresh token'
      description: 'This endpoint allows a user to refresh their token'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
